{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/components/login/login.component.ts","webpack:///src/app/auth/components/login/login.component.html","webpack:///src/app/auth/components/register/register.component.ts","webpack:///src/app/auth/components/register/register.component.html","webpack:///src/app/home/components/home/home.component.ts","webpack:///src/app/home/components/home/home.component.html","webpack:///src/app/home/components/room/room.component.ts","webpack:///src/app/home/components/tic-tac-toe/tic-tac-toe.component.ts","webpack:///src/app/home/components/tic-tac-toe/tic-tac-toe.component.html","webpack:///src/app/home/components/user-home/user-home.component.ts","webpack:///src/app/home/components/user-home/user-home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/room.service.ts","webpack:///src/app/services/web-socket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","config","url","options","AppModule","declarations","providers","bootstrap","AuthModule","LoginComponent","authService","_apiService","_router","form","postTypeRequest","value","subscribe","res","console","log","undefined","status","alert","message","setUserDataInLocalStorage","JSON","stringify","token","navigate","reset","userData","getUserDataFromLocalStorage","clearStorage","RegisterComponent","onSubmit","HomeComponent","RoomComponent","TicTacToeComponent","webSocketService","roomService","msgs","cachePlayers","playerInTurn","board","rows","cols","diag","antiDiag","winner","isInRoom","usersByRoomId","roomsMap","roomsList","currentUser","username","getRooms","listen","data","room","roomId","users","checkUser","unjoin","leaveRoom","resetRoomState","enterRoom","length","user","includes","push","sign","emit","start","filter","refreshWinner","refreshBoard","Array","fill","map","a","curRow","Math","floor","curCol","currentSign","checkWinner","abs","$event","move","UserHomeComponent","name","HomeModule","ApiService","_http","baseUrl","get","pipe","payload","post","put","providedIn","AuthGuardService","checkLogInStatus","AuthService","route","router","params","parseInt","isLoggedIn","variableName","localStorage","setItem","parse","getItem","clear","RoomService","apiService","getTypeRequest","updateUsersMsgsMySql","msg","addOrDelete","WebSocketService","socket","eventName","subscriber","on","next","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAMC,MAAM,GAAW,CACjB;AAACC,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAC;AAA1B,KADiB,EAEjB;AAACD,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KAFiB,EAGjB;AAACD,UAAI,EAAE,WAAP;AACEC,eAAS,EAAC,gGADZ;AAEEC,cAAQ,EAAC,CACP;AACEF,YAAI,EAAC,aADP;AAEEC,iBAAS,EAAC;AAFZ,OADO,CAFX;AAQEE,iBAAW,EAAC,CAAC,6EAAD;AARd,KAHiB,CAAvB;;QAmBaC,gB,GACX,4BAAc;AAAA;AAEb,K;;;YAHUA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;AC7B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaU,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,WAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,QAAMC,MAAM,GAAmB;AAAEC,SAAG,EAAE,uCAAP;AAAgDC,aAAO,EAAE;AAAzD,KAA/B;;QAsBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBART,CACT,kEADS,EAET,gEAFS,EAGT,8EAHS,EAIT,8EAJS,C;AAKV,gBAbQ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4DAJO,EAKP,4DALO,EAMP,6DAAeV,OAAf,CAAuBO,MAAvB,CANO,CAaR;;;;0HAGUG,S,EAAS;AAAA,uBAlBlB,2DAkBkB;AAlBN,kBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,qEALY,EAMZ,4DANY,EAOZ,4DAPY,EAOF,4DAPE;AAkBM,O;AAXR,K;;;;;sEAWDA,S,EAAS;cApBrB,sDAoBqB;eApBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRV,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4DAJO,EAKP,4DALO,EAMP,6DAAeD,OAAf,CAAuBO,MAAvB,CANO,CAJD;AAYRK,mBAAS,EAAE,CACT,kEADS,EAET,gEAFS,EAGT,8EAHS,EAIT,8EAJS,CAZH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD;AAlBH,S;AAoBY,Q;;;;;;;;;;;;;;;;;;ACtCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAVZ,CACP,4DADO,EAEP,0DAFO,EAGP,qEAHO,CAUY;;;;0HAAVA,U,EAAU;AAAA,uBAbnB,yFAamB,EAZnB,gFAYmB;AAZL,kBAGd,4DAHc,EAId,0DAJc,EAKd,qEALc,CAYK;AAPH,kBAGhB,yFAHgB,EAIhB,gFAJgB;AAOG,O;AAHL,K;;;;;sEAGLA,U,EAAU;cAftB,sDAesB;eAfb;AACRH,sBAAY,EAAE,CACZ,yFADY,EAEZ,gFAFY,CADN;AAKRV,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,qEAHO,CALD;AAURT,iBAAO,EAAC,CACN,yFADM,EAEN,gFAFM;AAVA,S;AAea,Q;;;;;;;;;;;;;;;;;;ACvBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWY;;AACI;;AACJ;;;;;;AAWA;;AACI;;AACJ;;;;;;AAQJ;;AACI;;AAA0B;;AAAwD;;AAEtF;;;;;;;;AArCR;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACI;;AAAyC;;AAAQ;;AACjD;;AAOA;;AAGJ;;AACA;;AACI;;AAAyC;;AAAQ;;AACjD;;AAOA;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AAAwF;;AAAO;;AAC/F;;AAIJ;;AACJ;;;;;;;;;;AA5ByD;;AAAA;;AAaA;;AAAA;;AAK7C;;AAAA;;AAII;;AAAA;;AACH;;AAAA;;;;QDvBAuB,c;AAEX,8BAAmBC,WAAnB,EACUC,WADV,EAEUC,OAFV,EAE2B;AAAA;;AAFR,aAAAF,WAAA,GAAAA,WAAA;AACT,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AAAoB;;;;eAE9B,kBAASC,IAAT,EAAoB;AAAA;;AAClB,eAAKF,WAAL,CAAiBG,eAAjB,CAAiC,cAAjC,EAAgDD,IAAI,CAACE,KAArD,EACGC,SADH,CACa,UAACC,GAAD,EAAW;AACpBC,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,GAAxB;;AACA,gBAAGA,GAAG,KAAGG,SAAT,EAAmB;AACjB,kBAAGH,GAAG,CAACI,MAAJ,KAAa,CAAhB,EAAkB;AAAE;AAClBC,qBAAK,CAACL,GAAG,CAACM,OAAL,CAAL;;AACA,qBAAI,CAACb,WAAL,CAAiBc,yBAAjB,CAA2C,UAA3C,EAAsDC,IAAI,CAACC,SAAL,CAAeT,GAAf,CAAtD;;AACA,qBAAI,CAACP,WAAL,CAAiBc,yBAAjB,CAA2C,OAA3C,EAAmDP,GAAG,CAACU,KAAvD;;AAEA,qBAAI,CAACf,OAAL,CAAagB,QAAb,CAAsB,CAAC,WAAD,CAAtB;AAED,eAPD,MAOK;AAAC;AACJf,oBAAI,CAACgB,KAAL;AACAP,qBAAK,CAACL,GAAG,CAACM,OAAL,CAAL;AACD;AACF;AACF,WAhBH;AAiBD;;;eACD,mBAAO;AACL,cAAMO,QAAQ,GAAG,KAAKpB,WAAL,CAAiBqB,2BAAjB,CAA6C,UAA7C,CAAjB;AACA,iBAAO,CAAC,EAAED,QAAQ,IAAIA,QAAQ,CAAC3C,EAAvB,CAAR;AACD;;;eACD,kBAAM;AACJ,eAAKuB,WAAL,CAAiBsB,YAAjB;;AACA,eAAKpB,OAAL,CAAagB,QAAb,CAAsB,CAAC,EAAD,CAAtB;AACD;;;;;;;uBAhCUnB,c,EAAc,0I,EAAA,wI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,ksB;AAAA;AAAA;ACX3B;;;;AAAM;;;;;;;;;sEDWOA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTX,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaQ;;AACI;;AACJ;;;;;;AAaF;;AACE;;AACF;;;;;;AAaA;;AACE;;AACF;;;;;;AAQF;;AACI;;AAA2B;;AAAoD;;AACnF;;;;QD5CSiC,iB;AAEX,iCAAoBtB,WAApB,EACoBC,OADpB,EACoC;AAAA;;AADhB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AAAmB;;;;eAEvC,kBAASC,IAAT,EAAqB;AAAA;;AACnB,eAAKF,WAAL,CAAiBG,eAAjB,CAAiC,gBAAjC,EAAmDD,IAAI,CAACE,KAAxD,EACGC,SADH,CACa,UAACC,GAAD,EAAW;AACpB,gBAAGA,GAAG,CAACI,MAAJ,KAAaD,SAAhB,EAA0B;AACxB,kBAAGH,GAAG,CAACI,MAAJ,KAAa,CAAhB,EAAkB;AAChBC,qBAAK,CAACL,GAAG,CAACM,OAAL,CAAL;AACAV,oBAAI,CAACgB,KAAL;AACD,eAHD,MAGK;AACHP,qBAAK,CAACL,GAAG,CAACM,OAAL,CAAL;;AACA,sBAAI,CAACX,OAAL,CAAagB,QAAb,CAAsB,CAAC,OAAD,CAAtB;AACD;AACF;AACF,WAXH;AAYD;;;;;;;uBAlBUK,iB,EAAiB,wI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,26B;AAAA;AAAA;;;ACX9B;;AACE;;AAAwB;AAAA;;AAAA;;AAAA,mBAAY,IAAAC,QAAA,KAAZ;AAA6B,WAA7B;;AACtB;;AACI;;AAAsD;;AAAQ;;AAC9D;;AACE;;AAOF;;AACA;;AAGJ;;AACA;;AACE;;AAAyD;;AAAK;;AAC9D;;AACE;;AAOF;;AACA;;AAGF;;AACA;;AACE;;AAA4D;;AAAQ;;AACpE;;AACE;;AAOF;;AACA;;AAGF;;AACA;;AACI;;AAGJ;;AACA;;AAAsF;;AAAQ;;AAC9F;;AAGF;;AACF;;;;;;;;;;;;AA5CqD;;AAAA;;AAeF;;AAAA;;AAeA;;AAAA;;AAK3C;;AAAA;;AAII;;AAAA;;AACH;;AAAA;;;;;;;;;sED1CID,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACQQ;;AAAkJ;;AAAM;;AAAsB;;AAAS;;AAAO;;;;AAApH;;;;;;;;;;AAC1E;;AAAqJ;;AAAQ;;;;AAAnF;;;;;;;;AAC1E;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAAO;;;;;;;;QDArImC,a;AAEX,6BAAmBzB,WAAnB,EACoBE,OADpB,EACoC;AAAA;;AADjB,aAAAF,WAAA,GAAAA,WAAA;AACC,aAAAE,OAAA,GAAAA,OAAA;AAAkB;;;;eAGtC,kBAAM;AACJ,eAAKF,WAAL,CAAiBsB,YAAjB;;AACA,eAAKpB,OAAL,CAAagB,QAAb,CAAsB,CAAC,OAAD,CAAtB;AACD;;;;;;;uBATUO,a,EAAa,0I,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,42B;AAAA;AAAA;ACV1B;;AACI;;AAA4F;;AAAI;;AAChG;;AACE;;AACF;;AACA;;AACE;;AAEE;;AACA;;AACA;;AACF;;AACF;;AACJ;;AAGA;;;;AAf4B;;AAAA;;AAOS;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDAxBA,a,EAAa;cALzB,uDAKyB;eALf;AACTrC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoC,a;AAEX,+BAAc;AAAA;AAAG;;;;eAEjB,oBAAQ,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,2D;AAAA;;;;;sEAAbA,a,EAAa;cALzB,uDAKyB;eALf;AACTtC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AACI;;AACJ;;;;;;;;AAkBD;;AACK;;AAAgB;;AAAe;;AAC/B;;AAAI;;AAAkB;;AACtB;;AAAI;;AAA8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAI;;AAAS;;AACrF;;;;;;AAHqB;;AAAA;;AACZ;;AAAA;;;;;;AAbZ;;AAGC;;AACE;;AACE;;AAA8B;;AAAO;;AACrC;;AAA8B;;AAAU;;AACxC;;AACF;;AACF;;AACA;;AACE;;AAKF;;AACJ;;;;;;AANU;;AAAA,yFAAsC,SAAtC,EAAsC,eAAtC;;;;;;AAgBH;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAGA;;;;;;AAAA;;;;;;AALR;;AACI;;AAGA;;AAIJ;;;;;;;;AAPoD;;AAAA,sFAA4B,UAA5B,EAA4B,IAA5B;;;;;;;;AAUhD;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAAO;;AAC7D;;;;;;;;AAEI;;AAA+E;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAS;;;;;;;;AACjI;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAAU;;;;;;AAMnI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHR;;AACI;;AAAiD;;AAAe;;AAChE;;AAGJ;;;;;;AAHgC;;AAAA;;;;;;AAK5B;;AAA8F;;AAAU;;;;;;AACxG;;AAAwH;;AAAqB;;;;;;AAC7I;;AAAwI;;AAAS;;;;;;AACjJ;;AAA8G;;AAAQ;;;;;;AACtH;;AAAsG;;AAAG;;;;;;AAL7G;;AACI;;AACA;;AACA;;AACA;;AACA;;AACJ;;;;;;AALqD;;AAAA;;AACA;;AAAA;;AACE;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;;;QD1EtDqC,kB;AAuBX,kCAAoBC,gBAApB,EACoB5B,WADpB,EAEoB6B,WAFpB,EAE2C;AAAA;;AAFvB,aAAAD,gBAAA,GAAAA,gBAAA;AACA,aAAA5B,WAAA,GAAAA,WAAA;AACA,aAAA6B,WAAA,GAAAA,WAAA;AAvBpB,aAAAC,IAAA,GAAW,EAAX,CAuB2C,CArB3C;;AACA,aAAAC,YAAA,GAAuB,EAAvB,CAoB2C,CAnB3C;;AACA,aAAAC,YAAA,GAAmB,EAAnB;AACA,aAAAC,KAAA,GAAY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAZ;AACA,aAAAC,IAAA,GAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;AACA,aAAAC,IAAA,GAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;AACA,aAAAC,IAAA,GAAc,CAAd;AACA,aAAAC,QAAA,GAAkB,CAAlB,CAa2C,CAZ3C;;AACA,aAAAC,MAAA,GAAc,EAAd;AAGA,aAAAC,QAAA,GAAiB,KAAjB;AACA,aAAAC,aAAA,GAAqB,EAArB;AACA,aAAAC,QAAA,GAAa/B,SAAb;AACA,aAAAgC,SAAA,GAAgB,EAAhB;AAME,aAAKC,WAAL,GAAmB,KAAK3C,WAAL,CAAiBqB,2BAAjB,CAA6C,UAA7C,EAAyDuB,QAA5E;AACD;;;;eACD,oBAAW;AAAA;;AACT,eAAKf,WAAL,CAAiBgB,QAAjB;AACA,eAAKjB,gBAAL,CACKkB,MADL,CACY,kBADZ,EAEKxC,SAFL,CAEe,UAACyC,IAAD,EAAc;AACvB,gBAAIA,IAAI,CAACC,IAAL,KAAc,MAAI,CAACC,MAAvB,EAA+B;AAC7B,oBAAI,CAAClB,YAAL,GAAoBgB,IAAI,CAAChB,YAAzB;AACD,aAFD,MAEO;AACL,oBAAI,CAACA,YAAL,GAAoB,EAApB;AACD;AACF,WARL;AASA,eAAKH,gBAAL,CACKkB,MADL,CACY,aADZ,EAEKxC,SAFL,CAEe,UAACyC,IAAD,EAAc;AACvB,kBAAI,CAACd,KAAL,GAAac,IAAI,CAACd,KAAlB;AACA,kBAAI,CAACD,YAAL,GAAoBe,IAAI,CAACf,YAAzB;AACA,kBAAI,CAACK,QAAL,GAAgBU,IAAI,CAACV,QAArB;AACA,kBAAI,CAACD,IAAL,GAAYW,IAAI,CAACX,IAAjB;AACA,kBAAI,CAACF,IAAL,GAAYa,IAAI,CAACb,IAAjB;AACA,kBAAI,CAACC,IAAL,GAAYY,IAAI,CAACZ,IAAjB;AACD,WATL;AAUA,eAAKP,gBAAL,CACKkB,MADL,CACY,cADZ,EAEKxC,SAFL,CAEe,UAACyC,IAAD,EAAc;AACvB,kBAAI,CAACT,MAAL,GAAcS,IAAI,CAACT,MAAnB;AACD,WAJL;AAKA,eAAKV,gBAAL,CACKkB,MADL,CACY,YADZ,EACyB;AADzB,WAEKxC,SAFL,CAEe,UAACyC,IAAD,EAAc;AACvB,kBAAI,CAACP,aAAL,GAAqBO,IAAI,CAACG,KAA1B;AACA,kBAAI,CAACpB,IAAL,GAAYiB,IAAI,CAACjB,IAAjB;AACD,WALL;AAME,eAAKF,gBAAL,CACGkB,MADH,CACU,eADV,EAC0B;AAD1B,WAEGxC,SAFH,CAEa,UAACyC,IAAD,EAAc;AACvB,kBAAI,CAACN,QAAL,GAAgBM,IAAhB;AACD,WAJH;AAMH;;;eAED,qBAAS;AACP,eAAKR,QAAL,GAAgB,KAAhB;;AACA,cAAG,KAAKY,SAAL,CAAe,KAAKR,WAApB,CAAH,EAAoC;AAClC,iBAAKS,MAAL;AACD;;AACD,eAAKvB,WAAL,CAAiBwB,SAAjB,CAA2B,KAAKJ,MAAhC,EAAwC,KAAKN,WAA7C;AACA,eAAKW,cAAL;AACD;;;eACD,0BAAiB;AACf,eAAKL,MAAL,GAAcvC,SAAd;AACD;;;eACD,mBAAUjC,EAAV,EAAgB;AACd+B,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKsB,YAA/B;AACA,eAAKQ,QAAL,GAAgB,IAAhB;AACA,eAAKU,MAAL,GAAcxE,EAAd;AACA,eAAKoD,WAAL,CAAiB0B,SAAjB,CAA2B,KAAKN,MAAhC,EAAuC,KAAKN,WAA5C;AAED;;;eAED,mBAAUC,QAAV,EAAkB;AAChB,cAAIrC,GAAG,GAAG,IAAV;AACA,cAAG,KAAKwB,YAAL,CAAkByB,MAAlB,KAA2B,CAA9B,EAAiC,OAAO,KAAP;;AAFjB,qDAGH,KAAKzB,YAHF;AAAA;;AAAA;AAGhB,gEAA+B;AAAA,kBAAvB5D,CAAuB;AAC7B,kBAAGA,CAAC,CAACsF,IAAF,KAASb,QAAZ,EAAsB,OAAO,IAAP,CAAtB,KACKrC,GAAG,GAAG,KAAN;AACN;AANe;AAAA;AAAA;AAAA;AAAA;;AAOhB,iBAAOA,GAAP;AACD;;;eACD,gBAAI;AACF,cAAG,KAAKwB,YAAL,CAAkB2B,QAAlB,CAA2B,KAAKf,WAAhC,CAAH,EAAgD;AAC9C/B,iBAAK,CAAC,yBAAD,CAAL;AACD,WAFD,MAEM,IAAG,KAAKmB,YAAL,CAAkByB,MAAlB,KAA6B,CAAhC,EAAkC;AACtC5C,iBAAK,CAAC,8CAAD,CAAL;AACD,WAFK,MAED;AACH,iBAAKmB,YAAL,CAAkB4B,IAAlB,CAAuB;AACrBF,kBAAI,EAAC,KAAKd,WADW;AAErBiB,kBAAI,EAAC;AAFgB,aAAvB;AAIA,iBAAKhC,gBAAL,CAAsBiC,IAAtB,CAA2B,kBAA3B,EAA+C;AAC7C9B,0BAAY,EAAC,KAAKA,YAD2B;AAE7CiB,kBAAI,EAAE,KAAKC;AAFkC,aAA/C;;AAIA,gBAAG,KAAKlB,YAAL,CAAkByB,MAAlB,KAA2B,CAA9B,EAAgC;AAC9B,mBAAKM,KAAL;AACD;AACF;AACF;;;eACD,kBAAM;AAAA;;AACJ,eAAK/B,YAAL,GAAoB,KAAKA,YAAL,CAAkBgC,MAAlB,CAAyB,UAAAhB,IAAI,EAAE;AACjD,mBAAOA,IAAI,CAACU,IAAL,KAAY,MAAI,CAACd,WAAxB;AACD,WAFmB,CAApB;AAGA,eAAKf,gBAAL,CAAsBiC,IAAtB,CAA2B,kBAA3B,EAA+C;AAC7C9B,wBAAY,EAAC,KAAKA,YAD2B;AAE7CiB,gBAAI,EAAE,KAAKC;AAFkC,WAA/C;AAGA,eAAKe,aAAL;AACA,eAAKC,YAAL;AACD;;;eAED,wBAAY;AACV,eAAKrC,gBAAL,CAAsBiC,IAAtB,CAA2B,aAA3B,EAAyC;AACvC5B,iBAAK,EAAC,IAAIiC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,UAAAC,CAAC;AAAA,qBAAE,EAAF;AAAA,aAA3B,CADiC;AAEvCrC,wBAAY,EAAC,EAF0B;AAGvCE,gBAAI,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHgC;AAIvCC,gBAAI,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJgC;AAKvCC,gBAAI,EAAG,CALgC;AAMvCC,oBAAQ,EAAC,CAN8B;AAOvCW,gBAAI,EAAE,KAAKC;AAP4B,WAAzC;AASD;;;eACD,yBAAa;AACX,eAAKrB,gBAAL,CAAsBiC,IAAtB,CAA2B,cAA3B,EAA0C;AACxCvB,kBAAM,EAAC,EADiC;AAExCU,gBAAI,EAAE,KAAKC;AAF6B,WAA1C;AAID;;;eACD,iBAAK;AACH,eAAKe,aAAL;AAEA,eAAKjC,YAAL,CAAkB,CAAlB,EAAqB6B,IAArB,GAA4B,GAA5B;AACA,eAAK7B,YAAL,CAAkB,CAAlB,EAAqB6B,IAArB,GAA4B,GAA5B;AAEA,eAAKhC,gBAAL,CAAsBiC,IAAtB,CAA2B,aAA3B,EAAyC;AACvC5B,iBAAK,EAAC,IAAIiC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,UAAAC,CAAC;AAAA,qBAAE,EAAF;AAAA,aAA3B,CADiC;AAEvCrC,wBAAY,EAAC,KAAKW,WAFqB;AAGvCT,gBAAI,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHgC;AAIvCC,gBAAI,EAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJgC;AAKvCC,gBAAI,EAAG,CALgC;AAMvCC,oBAAQ,EAAC,CAN8B;AAOvCW,gBAAI,EAAE,KAAKC;AAP4B,WAAzC;AASA,eAAKrB,gBAAL,CAAsBiC,IAAtB,CAA2B,kBAA3B,EAA8C;AAC5C9B,wBAAY,EAAC,KAAKA,YAD0B;AAE5CiB,gBAAI,EAAE,KAAKC;AAFiC,WAA9C;AAGD;;;eACD,cAAKxE,EAAL,EAAc;AACZ,cAAG,KAAKwD,KAAL,CAAWxD,EAAX,MAAiB,EAApB,EAAuB;AACrB;AACD,WAFD,MAEM,IAAG,KAAKuD,YAAL,KAAoB,KAAKW,WAA5B,EAAwC;AAC5C/B,iBAAK,CAAC,gBAAD,CAAL;AACD,WAFK,MAEA,IAAG,KAAKqB,KAAL,CAAWxD,EAAX,MAAiB,EAAjB,IAAuB,KAAKuD,YAAL,KAAoB,KAAKW,WAAnD,EAA+D;AACnE,gBAAI2B,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW/F,EAAE,GAAC,CAAd,CAAb;AACA,gBAAIgG,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAW/F,EAAE,GAAC,CAAd,CAAb;AACA,gBAAIiG,WAAJ;;AACA,gBAAG,KAAK3C,YAAL,CAAkB,CAAlB,EAAqB0B,IAArB,KAA4B,KAAKd,WAApC,EAAgD;AAC9C+B,yBAAW,GAAG,KAAK3C,YAAL,CAAkB,CAAlB,EAAqB6B,IAAnC;AACA,mBAAK5B,YAAL,GAAoB,KAAKD,YAAL,CAAkB,CAAlB,EAAqB0B,IAAzC;AACD,aAHD,MAGK;AACHiB,yBAAW,GAAG,KAAK3C,YAAL,CAAkB,CAAlB,EAAqB6B,IAAnC;AACA,mBAAK5B,YAAL,GAAoB,KAAKD,YAAL,CAAkB,CAAlB,EAAqB0B,IAAzC;AACD;;AACD,iBAAKxB,KAAL,CAAWxD,EAAX,IAAeiG,WAAf;;AACA,gBAAGJ,MAAM,KAAGG,MAAZ,EAAmB;AACjB,kBAAGC,WAAW,KAAG,GAAjB,EAAqB;AACnB,qBAAKtC,IAAL;AACD,eAFD,MAEM,IAAGsC,WAAW,KAAG,GAAjB,EAAqB;AACzB,qBAAKtC,IAAL;AACD;AACF;;AACD,gBAAGkC,MAAM,KAAI,IAAEG,MAAf,EAAuB;AACrB,kBAAGC,WAAW,KAAG,GAAjB,EAAqB;AACnB,qBAAKrC,QAAL;AACD,eAFD,MAEM,IAAGqC,WAAW,KAAG,GAAjB,EAAqB;AACzB,qBAAKrC,QAAL;AACD;AACF;;AACD,gBAAGqC,WAAW,KAAG,GAAjB,EAAqB;AACnB,mBAAKxC,IAAL,CAAUoC,MAAV;AACA,mBAAKnC,IAAL,CAAUsC,MAAV;AACD,aAHD,MAGM,IAAGC,WAAW,KAAG,GAAjB,EAAqB;AACzB,mBAAKxC,IAAL,CAAUoC,MAAV;AACA,mBAAKnC,IAAL,CAAUsC,MAAV;AACD;;AAED,iBAAK7C,gBAAL,CAAsBiC,IAAtB,CAA2B,aAA3B,EAAyC;AACvC5B,mBAAK,EAAC,KAAKA,KAD4B;AAEvCD,0BAAY,EAAC,KAAKA,YAFqB;AAGvCE,kBAAI,EAAG,KAAKA,IAH2B;AAIvCC,kBAAI,EAAG,KAAKA,IAJ2B;AAKvCC,kBAAI,EAAG,KAAKA,IAL2B;AAMvCC,sBAAQ,EAAC,KAAKA,QANyB;AAOvCW,kBAAI,EAAE,KAAKC;AAP4B,aAAzC;;AASA,gBAAG,KAAK0B,WAAL,CAAiBlG,EAAjB,CAAH,EAAwB;AACtB,mBAAKmD,gBAAL,CAAsBiC,IAAtB,CAA2B,aAA3B,EAAyC;AACvC5B,qBAAK,EAAC,KAAKA,KAD4B;AAEvCD,4BAAY,EAAC,EAF0B;AAGvCE,oBAAI,EAAG,KAAKA,IAH2B;AAIvCC,oBAAI,EAAG,KAAKA,IAJ2B;AAKvCC,oBAAI,EAAG,KAAKA,IAL2B;AAMvCC,wBAAQ,EAAC,KAAKA,QANyB;AAOvCW,oBAAI,EAAE,KAAKC;AAP4B,eAAzC;AASA,mBAAKrB,gBAAL,CAAsBiC,IAAtB,CAA2B,cAA3B,EAA0C;AACxCvB,sBAAM,EAAC,KAAKK,WAD4B;AAExCK,oBAAI,EAAE,KAAKC;AAF6B,eAA1C;AAGD,aAbD,MAaM,IAAG,CAAC,KAAKhB,KAAL,CAAWyB,QAAX,CAAoB,EAApB,CAAJ,EAA4B;AAChC,mBAAK9B,gBAAL,CAAsBiC,IAAtB,CAA2B,cAA3B,EAA0C;AACxCvB,sBAAM,EAAC,SADiC;AAExCU,oBAAI,EAAE,KAAKC;AAF6B,eAA1C;AAGA,mBAAKrB,gBAAL,CAAsBiC,IAAtB,CAA2B,aAA3B,EAAyC;AACvC5B,qBAAK,EAAC,KAAKA,KAD4B;AAEvCD,4BAAY,EAAC,EAF0B;AAGvCE,oBAAI,EAAG,KAAKA,IAH2B;AAIvCC,oBAAI,EAAG,KAAKA,IAJ2B;AAKvCC,oBAAI,EAAG,KAAKA,IAL2B;AAMvCC,wBAAQ,EAAC,KAAKA,QANyB;AAOvCW,oBAAI,EAAE,KAAKC;AAP4B,eAAzC;AASD;AACF,WAtEK,MAsED;AACHrC,iBAAK,CAAC,kDAAD,CAAL;AACD;AACF;;;eACD,qBAAYnC,EAAZ,EAAqB;AACnB,cAAI6F,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW/F,EAAE,GAAC,CAAd,CAAb;AACA,cAAIgG,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAW/F,EAAE,GAAC,CAAd,CAAb;;AACA,cAAG8F,IAAI,CAACK,GAAL,CAAS,KAAKxC,IAAd,MAAsB,CAAtB,IACAmC,IAAI,CAACK,GAAL,CAAS,KAAK1C,IAAL,CAAUoC,MAAV,CAAT,MAA8B,CAD9B,IAEAC,IAAI,CAACK,GAAL,CAAS,KAAKzC,IAAL,CAAUsC,MAAV,CAAT,MAA8B,CAF9B,IAGAF,IAAI,CAACK,GAAL,CAAS,KAAKvC,QAAd,MAA0B,CAH7B,EAG+B;AAC3B,mBAAO,IAAP;AACH,WALD,MAKM,OAAO,KAAP;AACP;;;eAED,4BAAmBwC,MAAnB,EAAgC;AAC9B,eAAKjD,gBAAL,CAAsBiC,IAAtB,CAA2B,SAA3B,EAAsC,KAAtC;AACD;;;;;;;uBA9PUlC,kB,EAAkB,qJ,EAAA,0I,EAAA,0I;AAAA,K;;;YAAlBA,kB;AAAkB,kC;AAAA,e;AAAA,c;AAAA,+oD;AAAA;AAAA;;;ACd/B;;AAEI;;AACI;AAAA;;AAAA;;AAAY,gBAAA4B,SAAA;AAAsC,mBAAC,WAAD;AAAqB,WAAvE;;AAEA;;AACA;;AAA0C;;AAAe;;AACzD;;AAOA;;AACA;;AAAG;;AAAkB;;AACrB;;AACI;;AAGJ;;AAEA;;AAA6E;;AAAS;;AAC1F;;AAEA;;AACI;;AAkBJ;;AAEJ;;AAEA;;AACI;;AACI;;AACI;;AAA8D;AAAA,mBAAS,IAAAF,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAU;;AAC9F;;AAAiD;;AAAa;;AAC9D;;AAGA;;AAAiD;;AAAkB;;AACnE;;AASJ;;AACA;;AACQ;;AAGA;;AACI;;AACA;;AACJ;;AAGJ;;AAMA;;AAQA;;AACI;;AACI;;AAAiB;AAAA,mBAAS,IAAAyB,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACxD;;AACA;;AACI;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACxD;;AACA;;AACI;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACpD;;AAAiB;AAAA,mBAAS,IAAAA,IAAA,CAAK,CAAL,CAAT;AAAgB,WAAhB;;AAAkB;;AAAiB;;AACxD;;AAEJ;;AACJ;;AACJ;;AACJ;;;;;;AA/GK;;AAeM;;AAAA;;AAE+D;;AAAA;;AAK1D;;AAAA;;AAID;;AAAA;;AAsBS;;AAAA;;AAKe;;AAAA;;AAIC;;AAAA;;AAWnB;;AAAA;;AAIO;;AAAA;;AACA;;AAAA;;AAIX;;AAAA;;AAMA;;AAAA;;AAUsC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sED3F1CnD,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTvC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAWayF,iB,GAEX,2BAAoB/E,WAApB,EAA6C;AAAA;;AAAzB,WAAAA,WAAA,GAAAA,WAAA;AAClB,UAAMoB,QAAQ,GAAG,KAAKpB,WAAL,CAAiBqB,2BAAjB,CAA6C,UAA7C,CAAjB;AACA,WAAK2D,IAAL,GAAU5D,QAAQ,CAACwB,QAAnB;AACD,K;;;uBALUmC,iB,EAAiB,0I;AAAA,K;;;YAAjBA,iB;AAAiB,gC;AAAA,e;AAAA,a;AAAA,2E;AAAA;AAAA;ACX9B;;AAAI;;AAAiD;;AACrD;;AACI;;AACI;;AAAI;;AAAI;;AACZ;;AACA;;AACI;;AAAyE;;AAAK;;AAElF;;AACJ;;AAEA;;;;AAXI;;AAAA;;AAMO;;AAAA;;;;;;;;;sEDKEA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3F,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2Ba2F,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBATZ,CACP,0DADO,EAEP,4DAFO,EAGP,oEAHO,CASY;;;;0HAAVA,U,EAAU;AAAA,uBAdnB,6EAcmB,EAbnB,2FAamB,EAZnB,gGAYmB,EAXnB,6EAWmB;AAXN,kBAGb,0DAHa,EAIb,4DAJa,EAKb,oEALa,CAWM;AANH,kBAGhB,6EAHgB;AAMG,O;AAHN,K;;;;;sEAGJA,U,EAAU;cAhBtB,sDAgBsB;eAhBb;AACRtF,sBAAY,EAAE,CACZ,6EADY,EAEZ,2FAFY,EAGZ,gGAHY,EAIZ,6EAJY,CADN;AAORV,iBAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,oEAHO,CAPD;AAYRT,iBAAO,EAAC,CACN,6EADM;AAZA,S;AAgBa,Q;;;;;;;;;;;;;;;;;;AC3BvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0G,U;AAIX,0BAAoBC,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA,CAAmB,CAHvC;;AACA,aAAAC,OAAA,GAAQ,gCAAR;AAIC;;;;eACF,wBAAe5F,GAAf,EAAkB;AACf,iBAAO,KAAK2F,KAAL,CAAWE,GAAX,WAAkB,KAAKD,OAAvB,SAAiC5F,GAAjC,GACJ8F,IADI,CACC,2DAAI,UAAA/E,GAAG,EAAE;AACb,mBAAOA,GAAP;AACD,WAFK,CADD,CAAP;AAID;;;eAED,yBAAgBf,GAAhB,EAAoB+F,OAApB,EAA2B;AACzB,iBAAO,KAAKJ,KAAL,CAAWK,IAAX,WAAmB,KAAKJ,OAAxB,SAAkC5F,GAAlC,GAAwC+F,OAAxC,EACJD,IADI,CACC,2DAAI,UAAA/E,GAAG,EAAE;AACb,mBAAOA,GAAP;AACD,WAFK,CADD,CAAP;AAID;;;eAED,wBAAef,GAAf,EAAmB+F,OAAnB,EAA0B;AACxB,iBAAO,KAAKJ,KAAL,CAAWM,GAAX,WAAkB,KAAKL,OAAvB,SAAiC5F,GAAjC,GAAuC+F,OAAvC,EACJD,IADI,CACC,2DAAI,UAAA/E,GAAG,EAAI;AACf,mBAAOA,GAAP;AACD,WAFK,CADD,CAAP;AAID;;;;;;;uBA1BU2E,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVQ,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACNvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,gB;AAEX,gCAAoB3F,WAApB,EAA6C;AAAA;;AAAzB,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;eAChD,uBAAW;AACT,iBAAO,KAAKA,WAAL,CAAiB4F,gBAAjB,EAAP;AACD;;;;;;;uBALUD,gB,EAAgB,iH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVD,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaG,W;AAGX,2BAAoBC,KAApB,EAAkDC,MAAlD,EAAkE;AAAA;;AAAA;;AAA9C,aAAAD,KAAA,GAAAA,KAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAChDD,aAAK,CAACE,MAAN,CAAa1F,SAAb,CACE,UAAA0F,MAAM,EAAG;AACL,gBAAI,CAACvH,EAAL,GAAUwH,QAAQ,CAACD,MAAM,CAAC,IAAD,CAAP,CAAlB;AACH,SAHH;AAMD;;;;eAED,4BAAgB;AACd,cAAM5E,QAAQ,GAAG,KAAKC,2BAAL,CAAiC,UAAjC,CAAjB;AACA,eAAK6E,UAAL,GAAkB,CAAC,EAAE9E,QAAQ,IAAIA,QAAQ,CAAC3C,EAAvB,CAAnB;AACA,iBAAO,KAAKyH,UAAZ;AACD;;;eACD,mCAA0BC,YAA1B,EAA4CpD,IAA5C,EAAqD;AACnDqD,sBAAY,CAACC,OAAb,CAAqBF,YAArB,EAAkCpD,IAAlC;AACD;;;eAED,qCAA4BoD,YAA5B,EAA4C;AAC3C,iBAAOpF,IAAI,CAACuF,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqBJ,YAArB,CAAX,CAAP;AACA;;;eACD,wBAAY;AACVC,sBAAY,CAACI,KAAb;AACD;;;;;;;uBA1BUX,W,EAAW,sH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,W;AAEX,2BAAoBC,UAApB,EACoB9E,gBADpB,EACuD;AAAA;;AADnC,aAAA8E,UAAA,GAAAA,UAAA;AACA,aAAA9E,gBAAA,GAAAA,gBAAA;AAAsC;;;;eAC1D,oBAAQ;AAAA;;AACN,eAAK8E,UAAL,CAAgBC,cAAhB,CAA+B,+BAA/B,EACGrG,SADH,CACa,UAACC,GAAD,EAAW;AACpB,kBAAI,CAACqB,gBAAL,CAAsBiC,IAAtB,CAA2B,eAA3B,EAA2CtD,GAA3C;AACD,WAHH;AAID;;;eACD,mBAAU0C,MAAV,EAAiBQ,IAAjB,EAAqB;AACnB,eAAKmD,oBAAL,CAA0B3D,MAA1B,EAAiCQ,IAAjC,YAAyCA,IAAzC,0BAA6DR,MAA7D,QAAuE,QAAvE;AACA,eAAKrB,gBAAL,CAAsBiC,IAAtB,CAA2B,OAA3B,EAAoC;AAACb,gBAAI,EAACC;AAAN,WAApC;AACD;;;eACD,mBAAUA,MAAV,EAAiBQ,IAAjB,EAAqB;AACnB,eAAK7B,gBAAL,CAAsBiC,IAAtB,CAA2B,MAA3B,EAAmC;AAACb,gBAAI,EAACC;AAAN,WAAnC;AACA,eAAK2D,oBAAL,CAA0B3D,MAA1B,EAAiCQ,IAAjC,YAAyCA,IAAzC,0BAA6DR,MAA7D,QAAuE,KAAvE;AACD;;;eACD,8BAAqBA,MAArB,EAAgCQ,IAAhC,EAAyCoD,GAAzC,EAAiDC,WAAjD,EAAgE;AAAA;;AAC9D,cAAInI,IAAI,+BAAwBsE,MAAxB,sBAAR;AACA,eAAKyD,UAAL,CAAgBtG,eAAhB,CAAgCzB,IAAhC,EAAqC;AACjC8E,gBAAI,EAAJA,IADiC;AAEjCoD,eAAG,EAAHA,GAFiC;AAGjCC,uBAAW,EAAXA;AAHiC,WAArC,EAIGxG,SAJH,CAIa,UAACC,GAAD,EAAW;AACtB,kBAAI,CAACsC,QAAL;;AACA,kBAAI,CAACjB,gBAAL,CAAsBiC,IAAtB,CAA2B,YAA3B,EAAwC;AACtC/B,kBAAI,EAACvB,GAAG,CAACuB,IAD6B;AAEtCoB,mBAAK,EAAC3C,GAAG,CAAC2C,KAF4B;AAGtCF,kBAAI,EAACC;AAHiC,aAAxC;AAKD,WAXD;AAYD;;;;;;;uBAhCUwD,W,EAAW,+G,EAAA,4H;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVf,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAOaqB,gB;AAGX;AACA,kCAAc;AAAA;;AAFL,aAAAvH,GAAA,GAAa,uCAAb;AAGP,aAAKwH,MAAL,GAAc,4DAAG,KAAKxH,GAAR,CAAd;AACD;;;;eAED,gBAAOyH,SAAP,EAAyB;AAAA;;AACvB,iBAAO,IAAI,+CAAJ,CAAe,UAACC,UAAD,EAAgB;AACpC,kBAAI,CAACF,MAAL,CAAYG,EAAZ,CAAeF,SAAf,EAA0B,UAAClE,IAAD,EAAU;AAClCmE,wBAAU,CAACE,IAAX,CAAgBrE,IAAhB;AACD,aAFD;AAGD,WAJM,CAAP;AAKD;;;eAED,cAAKkE,SAAL,EAAuBlE,IAAvB,EAAiC;AAC/B,cAAIkE,SAAS,KAAK,kBAAlB,EAAsC;AACpCzG,mBAAO,CAACC,GAAR,CAAYsC,IAAZ;AACD;;AACD,eAAKiE,MAAL,CAAYnD,IAAZ,CAAiBoD,SAAjB,EAA4BlE,IAA5B;AACD;;;;;;;uBArBUgE,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVrB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2B,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIhH,OAAO,CAACiH,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { LoginComponent } from './auth/components/login/login.component';\nimport { RegisterComponent } from './auth/components/register/register.component';\nimport { TicTacToeComponent } from './home/components/tic-tac-toe/tic-tac-toe.component';\nimport { UserHomeComponent } from './home/components/user-home/user-home.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n\n\nconst routes: Routes = [\n      {path: 'login', component:LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'user-home',\n        component:UserHomeComponent, \n        children:[\n          {\n            path:'tic-tac-toe',\n            component:TicTacToeComponent,\n          }\n        ],\n        canActivate:[AuthGuardService]\n      }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n  constructor() {\n   \n  }\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<app-home></app-home>\n\n ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AuthModule } from './auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeModule } from './home/home.module';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\n\nimport { AppComponent } from './app.component';\nimport { AuthService } from './services/auth.service';\nimport { ApiService } from './services/api.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { WebSocketService } from './services/web-socket.service';\n\nconst config: SocketIoConfig = { url: 'https://pvpgames-socket.herokuapp.com', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HomeModule,\n    AuthModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [\n    AuthService,\n    ApiService,\n    AuthGuardService,\n    WebSocketService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent} from './components/login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  exports:[\n    RegisterComponent,\n    LoginComponent\n  ]\n})\nexport class AuthModule { }\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  \n  constructor(public authService: AuthService, \n    private _apiService: ApiService,\n    private _router: Router) { }\n\n  onSubmit(form:NgForm){\n    this._apiService.postTypeRequest('/user/signin',form.value)\n      .subscribe((res:any)=>{\n        console.log(\"front-end\",res)\n        if(res!==undefined){\n          if(res.status===0){ //success log in\n            alert(res.message);\n            this.authService.setUserDataInLocalStorage(\"userData\",JSON.stringify(res));\n            this.authService.setUserDataInLocalStorage(\"token\",res.token);\n\n            this._router.navigate(['user-home']);\n            \n          }else{//fail log in\n            form.reset();\n            alert(res.message)\n          }\n        }\n      })\n  }\n  isLogin(){\n    const userData = this.authService.getUserDataFromLocalStorage('userData');\n    return !!(userData && userData.id);\n  }\n  logout(){\n    this.authService.clearStorage();\n    this._router.navigate(['']);\n  }\n}\n","<div  *ngIf=\"!this.authService.checkLogInStatus()\" class = 'col-md-4 offset-4 mt-5'>\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\" >\n        <div class = \"form-group\">\n            <label for=\"username\" class=\"form-label\">Username</label>\n            <input ngModel \n                   name = \"username\" \n                   type=\"username\" \n                   class=\"form-control\" \n                   id=\"username\"  \n                   required \n                   #username=\"ngModel\">\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf= \"username.pristine && username.touched\">\n                Please enter your username.\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input ngModel \n                   name = \"password\" \n                   type=\"password\" \n                   class=\"form-control\" \n                   id=\"password\" \n                   required \n                   #password=\"ngModel\">\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf= \"password.pristine && password.touched\">\n                Please enter your password.\n            </div>\n        </div>\n        <div>\n            {{loginForm.status}}\n            {{loginForm.value.username}}\n            {{loginForm.value.password}}\n        </div>\n        <button [disabled]=\"loginForm.status==='INVALID'\" type=\"submit\" class=\"btn btn-primary\">Sign In</button>\n        <div *ngIf=\"loginForm.status==='INVALID'\">\n            <small class=\"text-muted\">Signin button is disabled. Please provide required info.</small>\n            \n        </div>\n    </form>\n</div>\n\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  \n  constructor(private _apiService:ApiService,\n              private _router:Router) { }\n\n  onSubmit(form: NgForm){\n    this._apiService.postTypeRequest('/user/register', form.value)\n      .subscribe((res:any)=>{\n        if(res.status!==undefined){\n          if(res.status===0){\n            alert(res.message)\n            form.reset();\n          }else{\n            alert(res.message);\n            this._router.navigate(['login']);\n          }\n        }\n      })  \n  }\n\n}\n","<div class = 'col-md-4 offset-4 mt-5'>\n  <form #regForm=\"ngForm\" (ngSubmit)=\"onSubmit(regForm)\" >\n    <div class=\"row mb-4 form-group\" >\n        <label for=\"username\" class=\"col-sm-2 col-form-label\">Username</label>\n        <div class=\"col-sm-10\">\n          <input ngModel \n                 name=\"username\" \n                 type=\"username\" \n                 class=\"form-control\" \n                 id=\"username\"\n                 #username = \"ngModel\"\n                 required>\n        </div>\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"username.pristine && username.touched\">\n            Please enter your username.\n        </div>\n    </div>\n    <div class=\"row mb-4\">\n      <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n      <div class=\"col-sm-10\">\n        <input ngModel\n               name=\"email\"\n               type=\"email\" \n               class=\"form-control\" \n               id=\"inputEmail3\"\n               #email=\"ngModel\"\n               required>\n      </div>\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf= \"email.pristine && email.touched\">\n        Please enter your email.\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Password</label>\n      <div class=\"col-sm-10\">\n        <input ngModel\n               name=\"password\"       \n               type=\"password\" \n               class=\"form-control\" \n               id=\"inputPassword3\"\n               #password=\"ngModel\"\n               required>\n      </div>\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf= \"password.pristine && password.touched\">\n        Please enter your password.\n      </div>\n    </div>\n    <div>\n        {{username.value}}\n        {{email.value}}\n        {{password.value}}\n    </div>\n    <button [disabled]=\"regForm.status==='INVALID'\" type=\"submit\" class=\"btn btn-primary\">Register</button>\n    <div *ngIf=\"regForm.status==='INVALID'\">\n        <small class=\"text-muted\" >Please provide all information in order to register.</small>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor(public authService: AuthService,\n              private _router:Router) {}\n  \n  \n  logout(){\n    this.authService.clearStorage();\n    this._router.navigate(['login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['user-home']\" routerLinkActive=\"router-link-active\" >Home</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n\n        <a class=\"nav-item nav-link\" *ngIf=(!this.authService.checkLogInStatus()) [routerLink]=\"['login']\" routerLinkActive=\"router-link-active current\" >Login <span class=\"sr-only\">(current)</span></a>\n        <a class=\"nav-item nav-link\" *ngIf=(!this.authService.checkLogInStatus()) [routerLink]=\"['register']\" routerLinkActive=\"router-link-active current\" >Register</a>\n        <a class=\"nav-item nav-link\" *ngIf=(this.authService.checkLogInStatus()) (click)=\"logout()\" routerLinkActive=\"router-link-active\" >Log out</a>\n      </div>\n    </div>\n</nav>\n\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.scss']\n})\nexport class RoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { RoomService } from 'src/app/services/room.service';\nimport { WebSocketService } from 'src/app/services/web-socket.service';\n\n\n@Component({\n  selector: 'tic-tac-toe',\n  templateUrl: './tic-tac-toe.component.html',\n  styleUrls: ['./tic-tac-toe.component.scss']\n})\nexport class TicTacToeComponent{\n  \n  msgs:any[]=[];\n  currentUser:string;\n  //updatePlayersList\n  cachePlayers: any [] = [];\n  //updateBoard\n  playerInTurn:any = \"\";\n  board:any = [0,0,0,0,0,0,0,0,0]; \n  rows:any = [0,0,0];\n  cols:any = [0,0,0];\n  diag:number = 0;\n  antiDiag:number = 0;\n  //updateWinner\n  winner:string=\"\";\n  //updateRoom\n  roomId: any ;\n  isInRoom:boolean=false;\n  usersByRoomId:any []=[];\n  roomsMap:any=undefined;\n  roomsList:any[]=[];\n\n\n  constructor(private webSocketService:WebSocketService,\n              private authService:AuthService,\n              private roomService:RoomService){\n    this.currentUser = this.authService.getUserDataFromLocalStorage('userData').username;\n  }\n  ngOnInit() {\n    this.roomService.getRooms();\n    this.webSocketService\n        .listen('updatePlayerList')\n        .subscribe((data:any) => {\n          if (data.room === this.roomId) {\n            this.cachePlayers = data.cachePlayers;\n          } else {\n            this.cachePlayers = [];\n          }\n        });\n    this.webSocketService\n        .listen('updateBoard')\n        .subscribe((data:any) => {\n          this.board = data.board;\n          this.playerInTurn = data.playerInTurn;\n          this.antiDiag = data.antiDiag;\n          this.diag = data.diag;\n          this.rows = data.rows;\n          this.cols = data.cols;\n        });\n    this.webSocketService\n        .listen('updateWinner')\n        .subscribe((data:any) => {\n          this.winner = data.winner;\n        });\n    this.webSocketService\n        .listen('updateRoom')//boardcast to only certain rooms\n        .subscribe((data:any) => {\n          this.usersByRoomId = data.users;\n          this.msgs = data.msgs;\n        });\n      this.webSocketService\n        .listen('updateRoomsDb')//boardcast to all rooms\n        .subscribe((data:any) => {\n          this.roomsMap = data;\n        });\n\n  }\n\n  leaveRoom(){\n    this.isInRoom = false;\n    if(this.checkUser(this.currentUser)){\n      this.unjoin();\n    }\n    this.roomService.leaveRoom(this.roomId, this.currentUser);\n    this.resetRoomState();\n  }\n  resetRoomState() {\n    this.roomId = undefined;\n  }\n  enterRoom(id:any){\n    console.log(\"enteredRoom\",this.cachePlayers)\n    this.isInRoom = true;\n    this.roomId = id;\n    this.roomService.enterRoom(this.roomId,this.currentUser)\n\n  }\n  \n  checkUser(username){\n    let res = true;\n    if(this.cachePlayers.length===0) return false;\n    for(let e of this.cachePlayers){\n      if(e.user===username) return true;\n      else res = false;\n    }\n    return res;\n  }\n  join(){\n    if(this.cachePlayers.includes(this.currentUser)){\n      alert(\"You are already in game\");\n    }else if(this.cachePlayers.length === 2){\n      alert(\"Queue full, please wait for available seats.\")\n    }else{\n      this.cachePlayers.push({\n        user:this.currentUser,\n        sign:\"\"\n      })\n      this.webSocketService.emit('updatePlayerList', {\n        cachePlayers:this.cachePlayers,\n        room: this.roomId\n      });\n      if(this.cachePlayers.length===2){\n        this.start()\n      }\n    }\n  }\n  unjoin(){\n    this.cachePlayers = this.cachePlayers.filter(data=>{\n      return data.user!==this.currentUser;\n    });\n    this.webSocketService.emit('updatePlayerList', {\n      cachePlayers:this.cachePlayers,\n      room: this.roomId});\n    this.refreshWinner();\n    this.refreshBoard();\n  }\n\n  refreshBoard(){\n    this.webSocketService.emit('updateBoard',{\n      board:new Array(9).fill(\"\").map(a=>\"\"),\n      playerInTurn:\"\",\n      rows : [0,0,0],\n      cols : [0,0,0],\n      diag : 0,\n      antiDiag:0,\n      room: this.roomId,\n    });\n  }\n  refreshWinner(){\n    this.webSocketService.emit('updateWinner',{\n      winner:\"\",\n      room: this.roomId,\n    });\n  }\n  start(){\n    this.refreshWinner();\n    \n    this.cachePlayers[0].sign = \"X\";\n    this.cachePlayers[1].sign = \"O\";\n    \n    this.webSocketService.emit('updateBoard',{\n      board:new Array(9).fill(\"\").map(a=>\"\"),\n      playerInTurn:this.currentUser,\n      rows : [0,0,0],\n      cols : [0,0,0],\n      diag : 0,\n      antiDiag:0,\n      room: this.roomId,\n    });\n    this.webSocketService.emit('updatePlayerList',{\n      cachePlayers:this.cachePlayers,\n      room: this.roomId});\n  }\n  move(id:number){\n    if(this.board[id]!==\"\"){\n      return;\n    }else if(this.playerInTurn!==this.currentUser){\n      alert(\"Not your turn.\")\n    }else if(this.board[id]===\"\" && this.playerInTurn===this.currentUser){\n      let curRow = Math.floor(id/3);\n      let curCol = Math.floor(id%3);\n      let currentSign;\n      if(this.cachePlayers[0].user===this.currentUser){\n        currentSign = this.cachePlayers[0].sign;\n        this.playerInTurn = this.cachePlayers[1].user;\n      }else{\n        currentSign = this.cachePlayers[1].sign;\n        this.playerInTurn = this.cachePlayers[0].user;\n      }\n      this.board[id]=currentSign;\n      if(curRow===curCol){\n        if(currentSign===\"X\"){\n          this.diag++;\n        }else if(currentSign===\"O\"){\n          this.diag--;\n        }\n      }\n      if(curRow===(2-curCol)){\n        if(currentSign===\"X\"){\n          this.antiDiag++;\n        }else if(currentSign===\"O\"){\n          this.antiDiag--;\n        }\n      }\n      if(currentSign===\"X\"){\n        this.rows[curRow]++;\n        this.cols[curCol]++;\n      }else if(currentSign===\"O\"){\n        this.rows[curRow]--;\n        this.cols[curCol]--;\n      }\n \n      this.webSocketService.emit('updateBoard',{\n        board:this.board,\n        playerInTurn:this.playerInTurn,\n        rows : this.rows,\n        cols : this.cols,\n        diag : this.diag,\n        antiDiag:this.antiDiag,\n        room: this.roomId\n      });\n      if(this.checkWinner(id)){\n        this.webSocketService.emit('updateBoard',{\n          board:this.board,\n          playerInTurn:\"\",\n          rows : this.rows,\n          cols : this.cols,\n          diag : this.diag,\n          antiDiag:this.antiDiag,\n          room: this.roomId\n        });\n        this.webSocketService.emit('updateWinner',{\n          winner:this.currentUser,\n          room: this.roomId});\n      }else if(!this.board.includes(\"\")){\n        this.webSocketService.emit('updateWinner',{\n          winner:\"No one \",\n          room: this.roomId});\n        this.webSocketService.emit('updateBoard',{\n          board:this.board,\n          playerInTurn:\"\",\n          rows : this.rows,\n          cols : this.cols,\n          diag : this.diag,\n          antiDiag:this.antiDiag,\n          room: this.roomId\n        });\n      }\n    }else{\n      alert(\"The game is finished - please restart your game.\")\n    }\n  }\n  checkWinner(id:number){\n    let curRow = Math.floor(id/3);\n    let curCol = Math.floor(id%3);\n    if(Math.abs(this.diag)===3||\n       Math.abs(this.rows[curRow])===3||\n       Math.abs(this.cols[curCol])===3||\n       Math.abs(this.antiDiag)===3){\n        return true;\n    }else return false;\n  }\n  \n  checkSocketHandler($event: any) {\n    this.webSocketService.emit('message', 'OMG');\n  }\n}\n","<div [hidden]=\"this.isInRoom\" >\n    \n    <form #joinRoomForm=\"ngForm\" \n        (ngSubmit)=\"enterRoom(joinRoomForm.value.roomName);joinRoomForm.reset()\"\n        style=\"padding: 10px;\">\n        <div class=\"mb-3\">\n        <label for=\"inputRoom\" class=\"form-label\">Enter Room Name</label>\n        <input ngModel  \n                type=\"text\" \n                name = \"roomName\" \n                required \n                #roomName=\"ngModel\"\n                class=\"form-control col-lg-3 mx-auto\" \n                id=\"inputRoom\">\n        </div>\n        <p>{{roomName.value}}</p>\n        <div>\n            <small class=\"alert alert-info col-lg-3 mx-auto\" role=\"alert\" *ngIf= \"roomName.pristine && roomName.touched\">\n                Please enter your room name.\n            </small>\n        </div>\n        \n        <button [disabled]=\"roomName.pristine\" type=\"submit\" class=\"btn btn-primary\">Join Room</button>\n    </form>\n    \n    <div class=\"row d-flex justify-content-center\" style=\"margin-top:40px\">\n        <table *ngIf=\"this.roomsMap!==undefined && this.roomsMap.length>0 \" \n            class=\"table-hover\" style=\"width: 60%\">\n         <!-- <caption>List of Rooms In Use</caption> -->\n         <thead>\n           <tr>\n             <th class=\"th-lg\" scope=\"col\">Room Id</th>\n             <th class=\"th-lg\" scope=\"col\">User Count</th>\n             <th class=\"th-lg\" scope=\"col\" ></th>\n           </tr>\n         </thead>\n         <tbody>\n           <tr *ngFor=\"for let room of this.roomsMap\">\n                <th scope=\"row\">{{room.roomId}}</th>\n                <td>{{room.UserCount}}</td>\n                <td><button class=\"btn btn-light\" (click)=\"enterRoom(room.roomId)\">Join</button></td>\n           </tr>\n         </tbody>\n     </table>\n    </div>  \n   \n</div>\n\n<div class=\"container \" [hidden]=\"!this.isInRoom\">\n    <div class=\"row\">\n        <div class=\"col-3 list-group\">\n            <button class=\"list-group-item list-group-item-action active\" (click)=\"leaveRoom()\">Leave Room</button>\n            <li class=\"list-group-item list-group-item-info\">Users In Room</li>\n            <li class=\"list-group-item\"*ngFor = \"let user of this.usersByRoomId\">\n                {{user.username}}\n            </li>\n            <li class=\"list-group-item list-group-item-info\">Room Anouncements:</li>\n            <li class=\"list-group-item\" *ngFor=\"let msg of this.msgs; let i = index;\">\n                <div  style=\"font-weight: bold;\"  class=\"fadeIn\"*ngIf=\"i===0;else otherMsgs\">\n                    {{msg.msg}}\n                </div>\n                <ng-template #otherMsgs>\n                    {{msg.msg}} \n                </ng-template>\n                \n            </li>    \n        </div>\n        <div class = \"col-8 list-group\">\n                <div *ngIf =\"this.cachePlayers.length===2 && this.playerInTurn==='' && this.checkUser(this.currentUser)\">\n                    <button (click)=\"start()\" class=\"btn btn-primary\">Restart</button>\n                </div>\n                <div style=\"padding: 10px;\">\n                    <button *ngIf=\"!this.checkUser(this.currentUser) && this.cachePlayers.length<2\"(click)=\"join()\" class=\"btn btn-primary\">Join Game</button>\n                    <button *ngIf=\"this.checkUser(this.currentUser) && this.playerInTurn===''\"(click)=\"unjoin() \"class=\"btn btn-primary\">Leave Game</button>  \n                </div>\n            \n            \n            <div *ngIf=\"this.cachePlayers.length>0\">\n                <li class=\"list-group-item list-group-item-info\">Players in Game</li>\n                <li class=\"list-group-item\" *ngFor=\"let player of this.cachePlayers\">\n                    {{player.user}} - {{player.sign}}\n                </li>\n            </div>\n            <div *ngIf=\"this.checkUser(this.currentUser)\">\n                <li class=\"list-group-item list-group-item-info\" *ngIf=\"this.playerInTurn===this.currentUser\">Your turn </li>\n                <li class=\"list-group-item list-group-item-info\" *ngIf=\"this.playerInTurn!=='' && this.playerInTurn!==this.currentUser\">Your opponent's turn </li>\n                <li class=\"list-group-item list-group-item-danger\" *ngIf=\"this.winner!==''&& this.winner!==this.currentUser && this.winner!=='No one '\">You lost!</li>\n                <li class=\"list-group-item list-group-item-success\" *ngIf=\"this.winner!==''&& this.winner===this.currentUser\">You won!</li>\n                <li class=\"list-group-item list-group-item-danger\" *ngIf=\"this.winner!==''&& this.winner==='No one '\">Tie</li>\n            </div>\n            \n            <div class=\"board\">\n                <div class=\"row\">\n                    <div class=\"col\" (click)=\"move(0)\">{{this.board[0]}}</div>\n                    <div class=\"col\" (click)=\"move(1)\">{{this.board[1]}}</div>\n                    <div class=\"col\" (click)=\"move(2)\">{{this.board[2]}}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\" (click)=\"move(3)\">{{this.board[3]}}</div>\n                    <div class=\"col\" (click)=\"move(4)\">{{this.board[4]}}</div>\n                    <div class=\"col\" (click)=\"move(5)\">{{this.board[5]}}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\" (click)=\"move(6)\">{{this.board[6]}}</div>\n                    <div class=\"col\" (click)=\"move(7)\">{{this.board[7]}}</div>\n                    <div class=\"col\" (click)=\"move(8)\">{{this.board[8]}}</div>\n                </div>\n            \n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n\n\n@Component({\n  selector: 'user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.scss']\n})\nexport class UserHomeComponent {\n  name:string;\n  constructor(private authService:AuthService) {\n    const userData = this.authService.getUserDataFromLocalStorage('userData');\n    this.name=userData.username;\n  }\n  \n\n  \n\n}\n","<h5>Welcome {{this.name}}, what would you like to do?</h5>\n<ul>\n    <li>\n        <h4>Big2</h4>\n    </li>\n    <li>\n        <a [routerLink]=\"['tic-tac-toe']\" routerLinkActive=\"router-link-active\" >井字過三關</a>\n        \n    </li>\n</ul>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './components/home/home.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { UserHomeComponent } from './components/user-home/user-home.component';\nimport { TicTacToeComponent } from './components/tic-tac-toe/tic-tac-toe.component';\nimport { RoomComponent } from './components/room/room.component';\n\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    UserHomeComponent,\n    TicTacToeComponent,\n    RoomComponent\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    AppRoutingModule\n  ],\n  exports:[\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // baseUrl = 'http://localhost:4000';\n  baseUrl='https://pvpgames.herokuapp.com';\n  \n  constructor(private _http: HttpClient) {\n\n  }\n getTypeRequest(url){\n    return this._http.get(`${this.baseUrl}${url}`)\n      .pipe(map(res=>{\n        return res;\n      }))\n  }\n\n  postTypeRequest(url,payload){\n    return this._http.post(`${this.baseUrl}${url}`,payload)\n      .pipe(map(res=>{\n        return res;\n      }))\n  }\n\n  putTypeRequest(url,payload){\n    return this._http.put(`${this.baseUrl}${url}`,payload)\n      .pipe(map(res => {\n        return res;\n      }));\n  }\n  \n}\n","import { localizedString } from '@angular/compiler/src/output/output_ast';\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private authService:AuthService) { }\n  canActivate():boolean{\n    return this.authService.checkLogInStatus();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService{\n  isLoggedIn:boolean;\n  id:number;\n  constructor(private route:ActivatedRoute, private router: Router) {\n    route.params.subscribe(\n      params =>{\n          this.id = parseInt(params['id']);\n      }\n    );\n    \n  }\n  \n  checkLogInStatus(){\n    const userData = this.getUserDataFromLocalStorage('userData');\n    this.isLoggedIn = !!(userData && userData.id);\n    return this.isLoggedIn;\n  }\n  setUserDataInLocalStorage(variableName: any,data: any){\n    localStorage.setItem(variableName,data);\n  }\n\n  getUserDataFromLocalStorage(variableName:any){\n   return JSON.parse(localStorage.getItem(variableName));\n  }\n  clearStorage(){\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { WebSocketService } from './web-socket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n\n  constructor(private apiService:ApiService,\n              private webSocketService:WebSocketService) { }\n  getRooms(){\n    this.apiService.getTypeRequest('/user/tic-tac-toe/rooms/mysql')\n      .subscribe((res:any)=>{\n        this.webSocketService.emit(\"updateRoomsDb\",res)\n      })\n  }\n  leaveRoom(roomId,user){\n    this.updateUsersMsgsMySql(roomId,user,`${user} leaves room ${roomId}.`,\"delete\");\n    this.webSocketService.emit('leave', {room:roomId});\n  }\n  enterRoom(roomId,user){\n    this.webSocketService.emit('join', {room:roomId});\n    this.updateUsersMsgsMySql(roomId,user,`${user} enters room ${roomId}.`,\"add\");\n  }\n  updateUsersMsgsMySql(roomId:any,user:any,msg:any,addOrDelete:any){\n    let path = `/user/tic-tac-toe/${roomId}/msgs-users/mysql`\n    this.apiService.postTypeRequest(path,{\n        user,\n        msg,\n        addOrDelete\n    }).subscribe((res:any)=>{\n      this.getRooms()\n      this.webSocketService.emit('updateRoom',{\n        msgs:res.msgs,\n        users:res.users,\n        room:roomId\n      });\n    })\n  }\n              \n\n} \n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { io } from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n  socket: any;\n  readonly url: string =\"https://pvpgames-socket.herokuapp.com\";\n  // readonly url: string = \"ws://localhost:3000\";\n  constructor() {\n    this.socket = io(this.url);\n  }\n\n  listen(eventName:string) {\n    return new Observable((subscriber) => {\n      this.socket.on(eventName, (data) => {\n        subscriber.next(data);\n      })\n    });\n  }\n\n  emit(eventName: string,data:any) {\n    if (eventName === 'updatePlayerList') {\n      console.log(data);\n    }\n    this.socket.emit(eventName, data);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}